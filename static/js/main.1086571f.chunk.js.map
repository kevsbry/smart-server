{"version":3,"sources":["components/style.module.css","assets/laptop.svg","assets/no_wifi.svg","assets/cloud_storage.svg","assets/multi_browser.svg","assets/main_logo.svg","assets/iphone_db.svg","assets/platform.svg","assets/platform_mobile.svg","assets/play_store.svg","assets/app_store.svg","components/Home.js","components/Nav.js","components/Features.js","components/Platform.js","components/Screenshot.js","components/Download.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","React","forwardRef","props","ref","useState","className","style","title","setTitle","paragraph","setParagraph","useEffect","window","addEventListener","innerWidth","src","require","alt","MenuIcon","menuIcon","Nav","name","location","locations","linkColor","setLinkColor","position","home","features","platform","screenshot","download","smoothScroll","scrollTo","startY","pageYOffset","stopY","distance","speed","Math","round","step","leapY","timer","i","setTimeout","useRef","burger","current","display","onScroll","scrollY","removeEventListener","logo","map","loc","key","color","onClick","onClickNav","Feature","isRightAlign","image","Features","laptopImage","noWifiImage","cloudStorageImage","multiBrowser","setFeatures","f","Platform","isMobile","setIsMobile","Screenshot","images","img","Download","link","to","textDecoration","App","screentshot","setPosition","offsetTop","path","render","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1086571f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Nav\":\"style_Nav__2seP7\",\"menuIcon\":\"style_menuIcon__2Hpr5\",\"logo\":\"style_logo__2qU4z\",\"locations\":\"style_locations__W-JCE\",\"Home\":\"style_Home__SxsLW\",\"home-text\":\"style_home-text__cRUhf\",\"home-image\":\"style_home-image__29Yv-\",\"home-title\":\"style_home-title__31zrB\",\"Features\":\"style_Features__1RsA-\",\"features-resp-title\":\"style_features-resp-title__2T6Ii\",\"first-col\":\"style_first-col__FhwOq\",\"second-col\":\"style_second-col__1C1_z\",\"third-col\":\"style_third-col__1MGeO\",\"feature-container\":\"style_feature-container__H3iKm\",\"feature-right-align\":\"style_feature-right-align__3E8dC\",\"feature-left-align\":\"style_feature-left-align__3FCUx\",\"features-title\":\"style_features-title__3VEuU\",\"Platform\":\"style_Platform__3ZUQi\",\"platform-container\":\"style_platform-container__2Ss72\",\"Screenshot\":\"style_Screenshot__1Mugb\",\"title\":\"style_title__pKCjM\",\"screenshot-slide\":\"style_screenshot-slide__2LJxe\",\"Download\":\"style_Download__2Danz\",\"link-container\":\"style_link-container__29Dqa\",\"link\":\"style_link__-nhXl\"};","module.exports = __webpack_public_path__ + \"static/media/laptop.4939e8a1.svg\";","module.exports = __webpack_public_path__ + \"static/media/no_wifi.c09d6763.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloud_storage.273e5ba2.svg\";","module.exports = __webpack_public_path__ + \"static/media/multi_browser.71351f0c.svg\";","module.exports = __webpack_public_path__ + \"static/media/main_logo.2f7bac3d.svg\";","module.exports = __webpack_public_path__ + \"static/media/iphone_db.ea5416fd.svg\";","module.exports = __webpack_public_path__ + \"static/media/platform.7311524b.svg\";","module.exports = __webpack_public_path__ + \"static/media/platform_mobile.cd80d8da.svg\";","module.exports = __webpack_public_path__ + \"static/media/play_store.60bb7a15.svg\";","module.exports = __webpack_public_path__ + \"static/media/app_store.878d3517.svg\";","import React, { useState, useEffect } from \"react\";\r\nimport style from \"./style.module.css\";\r\n\r\nconst Home = React.forwardRef((props, ref) => {\r\n  const [title, setTitle] = useState(\r\n    <span className={style[\"home-title\"]}>\r\n      Transform your phone <br /> into a Server and start sharing content\r\n    </span>\r\n  );\r\n\r\n  const [paragraph, setParagraph] = useState(\r\n    <p>\r\n      Quickly share your files with others by transforming your mobile phone\r\n      into a server.\r\n      <br />\r\n      Once you start your mobile server other devices will be able to connect to\r\n      you and access\r\n      <br />\r\n      the files you chose to share.\r\n    </p>\r\n  );\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", () => {\r\n      if (window.innerWidth <= 700) {\r\n        setTitle(\r\n          <span className={style[\"home-title\"]}>\r\n            Transform your phone into a Server and start sharing content\r\n          </span>\r\n        );\r\n        setParagraph(\r\n          <p>\r\n            Quickly share your files with others by transforming your mobile\r\n            phone into a server. Once you start your mobile server other devices\r\n            will be able to connect to you and access the files you chose to\r\n            share.\r\n          </p>\r\n        );\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div ref={ref} className={style.Home}>\r\n      <div className={style[\"home-text\"]}>\r\n        {title}\r\n        {paragraph}\r\n      </div>\r\n      <div className={style[\"home-image\"]}>\r\n        <img src={require(\"../assets/main_logo.svg\")} alt=\"home-image\" />\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Home;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport style from \"./style.module.css\";\r\n\r\nconst MenuIcon = React.forwardRef((props, ref) => {\r\n  return (\r\n    <div ref={ref} className={style.menuIcon}>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n});\r\n\r\nfunction Nav(props) {\r\n  const [locations, setLocations] = useState([\r\n    {\r\n      name: \"home\",\r\n      location: \"/home\",\r\n    },\r\n    {\r\n      name: \"features\",\r\n      location: \"/features\",\r\n    },\r\n    {\r\n      name: \"platforms\",\r\n      location: \"/platform\",\r\n    },\r\n    {\r\n      name: \"screenshots\",\r\n      location: \"/screenshot\",\r\n    },\r\n    {\r\n      name: \"download\",\r\n      location: \"/download\",\r\n    },\r\n  ]);\r\n\r\n  const [linkColor, setLinkColor] = useState(\"#fff\");\r\n\r\n  const { home, features, platform, screenshot, download } = props.position;\r\n\r\n  const smoothScroll = (scrollTo) => {\r\n    var startY = window.pageYOffset; //current scroll position\r\n    var stopY = scrollTo; // scroll to\r\n    var distance = stopY > startY ? stopY - startY : startY - stopY;\r\n\r\n    var speed = Math.round(distance / 100);\r\n    if (speed >= 20) speed = 20;\r\n    var step = Math.round(distance / 25);\r\n    var leapY = stopY > startY ? startY + step : startY - step;\r\n    var timer = 0;\r\n    if (stopY > startY) {\r\n      for (var i = startY; i < stopY; i += step) {\r\n        setTimeout(\"window.scrollTo(0, \" + leapY + \")\", timer * speed);\r\n        leapY += step;\r\n        if (leapY > stopY) leapY = stopY;\r\n        timer++;\r\n      }\r\n      return;\r\n    }\r\n    for (var i = startY; i > stopY; i -= step) {\r\n      setTimeout(\"window.scrollTo(0, \" + leapY + \")\", timer * speed);\r\n      leapY -= step;\r\n      if (leapY < stopY) leapY = stopY;\r\n      timer++;\r\n    }\r\n  };\r\n\r\n  const onClickNav = (location) => {\r\n    if (location === \"/home\") smoothScroll(home);\r\n    else if (location === \"/features\") smoothScroll(features);\r\n    else if (location === \"/platform\") smoothScroll(platform);\r\n    else if (location === \"/screenshot\") smoothScroll(screenshot);\r\n    else if (location === \"/download\") smoothScroll(download);\r\n  };\r\n\r\n  const location = useRef();\r\n  const burger = useRef();\r\n\r\n  useEffect(() => {\r\n    //size\r\n    if (window.innerWidth <= 900) {\r\n      location.current.style.display = \"none\";\r\n      burger.current.style.display = \"block\";\r\n    }\r\n\r\n    window.addEventListener(\"resize\", () => {\r\n      if (window.innerWidth <= 900) {\r\n        location.current.style.display = \"none\";\r\n        burger.current.style.display = \"block\";\r\n      } else {\r\n        location.current.style.display = \"block\";\r\n        burger.current.style.display = \"none\";\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const onScroll = () => {\r\n    window.addEventListener(\"scroll\", () => {\r\n      if (window.scrollY > features) setLinkColor(\"#707070\");\r\n      else setLinkColor(\"#fff\");\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    props.position.features && onScroll();\r\n\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", onScroll());\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div className={style.Nav}>\r\n      <span className={style.logo}>smart server</span>\r\n      <div ref={location} className={style.locations}>\r\n        {locations.map((loc) => (\r\n          <span\r\n            key={loc.location}\r\n            style={{ color: linkColor }}\r\n            onClick={() => {\r\n              onClickNav(loc.location);\r\n            }}\r\n          >\r\n            {loc.name}\r\n          </span>\r\n        ))}\r\n      </div>\r\n      <MenuIcon ref={burger} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport style from \"./style.module.css\";\r\nimport laptopImage from \"../assets/laptop.svg\";\r\nimport noWifiImage from \"../assets/no_wifi.svg\";\r\nimport cloudStorageImage from \"../assets/cloud_storage.svg\";\r\nimport multiBrowser from \"../assets/multi_browser.svg\";\r\n\r\nconst Feature = props => {\r\n  return (\r\n    <div className={style[\"feature-container\"]}>\r\n      {props.isRightAlign === false && (\r\n        <img src={props.image} alt=\"feature image\" />\r\n      )}\r\n      <div\r\n        className={\r\n          props.isRightAlign\r\n            ? style[\"feature-right-align\"]\r\n            : style[\"feature-left-align\"]\r\n        }\r\n      >\r\n        {props.title}\r\n        {props.paragraph}\r\n      </div>\r\n      {props.isRightAlign && <img src={props.image} alt=\"feature image\" />}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Features = React.forwardRef((props, ref) => {\r\n  const [features, setFeatures] = useState([\r\n    {\r\n      title: (\r\n        <span>\r\n          access your files <br /> on any device\r\n        </span>\r\n      ),\r\n      paragraph: (\r\n        <p>\r\n          SMART SERVER allows you to access documents,\r\n          <br />\r\n          photos, videos and many more that are stored on your\r\n          <br />\r\n          phone on the fly. Gone are the days of USB thumb drives\r\n          <br />\r\n          and USB cables, just connect your device to your phone\r\n          <br />\r\n          server and download them right away at a high speed.\r\n        </p>\r\n      ),\r\n      image: laptopImage\r\n    },\r\n    {\r\n      title: (\r\n        <span>\r\n          no internet\r\n          <br />\r\n          connection needed\r\n        </span>\r\n      ),\r\n      paragraph: (\r\n        <p>\r\n          Internet connection and mobile data is not needed for\r\n          <br />\r\n          SMART SERVER to work while it hosts your local data.\r\n          <br />\r\n          Only wifi hotspot is required to be turned on to allow\r\n          <br />\r\n          other devices to connect on your mobile server.\r\n        </p>\r\n      ),\r\n      image: noWifiImage\r\n    },\r\n    {\r\n      title: (\r\n        <span>\r\n          your own cloud storage\r\n          <br />\r\n          at your finger tips\r\n        </span>\r\n      ),\r\n      paragraph: (\r\n        <p>\r\n          Browse files and watch uncompressed lossless photos\r\n          <br />\r\n          and videos without having to download them. With\r\n          <br />\r\n          SMART SERVER you will be able to stream stored media\r\n          <br />\r\n          on your smartphone to any device at HIGH-SPEED.\r\n        </p>\r\n      ),\r\n      image: cloudStorageImage\r\n    },\r\n    {\r\n      title: <span>multi browser support</span>,\r\n      paragraph: (\r\n        <p>\r\n          SMART SERVER is accessible to multiple internet\r\n          <br />\r\n          browsers and on any type of device weather it's a\r\n          <br />\r\n          laptop, desktop or mobile. You will be able to access\r\n          <br />\r\n          your data on your phone via local cloud storage on\r\n          <br />\r\n          multiple internet browsers.\r\n        </p>\r\n      ),\r\n      image: multiBrowser\r\n    }\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (window.innerWidth <= 400) {\r\n      setFeatures([\r\n        {\r\n          title: (\r\n            <span>\r\n              access your files <br /> on any device\r\n            </span>\r\n          ),\r\n          paragraph: (\r\n            <p>\r\n              SMART SERVER allows you to access documents, photos, videos and\r\n              many more that are stored on your phone on the fly. Gone are the\r\n              days of USB thumb drives and USB cables, just connect your device\r\n              to your phone server and download them right away at a high speed.\r\n            </p>\r\n          ),\r\n          image: laptopImage\r\n        },\r\n        {\r\n          title: (\r\n            <span>\r\n              no internet\r\n              <br />\r\n              connection needed\r\n            </span>\r\n          ),\r\n          paragraph: (\r\n            <p>\r\n              Internet connection and mobile data is not needed for SMART SERVER\r\n              to work while it hosts your local data. Only wifi hotspot is\r\n              required to be turned on to allow other devices to connect on your\r\n              mobile server.\r\n            </p>\r\n          ),\r\n          image: noWifiImage\r\n        },\r\n        {\r\n          title: (\r\n            <span>\r\n              your own cloud storage\r\n              <br />\r\n              at your finger tips\r\n            </span>\r\n          ),\r\n          paragraph: (\r\n            <p>\r\n              Browse files and watch uncompressed lossless photos and videos\r\n              without having to download them. With SMART SERVER you will be\r\n              able to stream stored media on your smartphone to any device at\r\n              HIGH-SPEED.\r\n            </p>\r\n          ),\r\n          image: cloudStorageImage\r\n        },\r\n        {\r\n          title: <span>multi browser support</span>,\r\n          paragraph: (\r\n            <p>\r\n              SMART SERVER is accessible to multiple internet browsers and on\r\n              any type of device weather it's a laptop, desktop or mobile. You\r\n              will be able to access your data on your phone via local cloud\r\n              storage on multiple internet browsers.\r\n            </p>\r\n          ),\r\n          image: multiBrowser\r\n        }\r\n      ]);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div ref={ref} className={style.Features}>\r\n      <span className={style[\"features-resp-title\"]}>key features</span>\r\n      <div className={style[\"first-col\"]}>\r\n        {features.map(\r\n          (f, i) =>\r\n            i < 2 && (\r\n              <Feature\r\n                key={i}\r\n                title={f.title}\r\n                paragraph={f.paragraph}\r\n                image={f.image}\r\n                isRightAlign={true}\r\n              />\r\n            )\r\n        )}\r\n      </div>\r\n      <div className={style[\"second-col\"]}>\r\n        <span className={style[\"features-title\"]}>key features</span>\r\n        <img src={require(\"../assets/iphone_db.svg\")} alt=\"iphone\" />\r\n      </div>\r\n      <div className={style[\"third-col\"]}>\r\n        {features.map(\r\n          (f, i) =>\r\n            i > 1 &&\r\n            i < 4 && (\r\n              <Feature\r\n                key={i}\r\n                title={f.title}\r\n                paragraph={f.paragraph}\r\n                image={f.image}\r\n                isRightAlign={false}\r\n              />\r\n            )\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Features;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport style from \"./style.module.css\";\r\n\r\nconst Platform = React.forwardRef((props, ref) => {\r\n  const [isMobile, setIsMobile] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (window.innerWidth <= 600) setIsMobile(true);\r\n\r\n    window.addEventListener(\"resize\", () => {\r\n      if (window.innerWidth <= 600) setIsMobile(true);\r\n      else setIsMobile(false);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className={style.Platform}>\r\n      <div ref={ref} className={style[\"platform-container\"]}>\r\n        <span>cross platform</span>\r\n        <div>\r\n          <img\r\n            src={\r\n              !isMobile\r\n                ? require(\"../assets/platform.svg\")\r\n                : require(\"../assets/platform_mobile.svg\")\r\n            }\r\n            alt=\"platform image\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Platform;\r\n","import React, { useState } from \"react\";\r\nimport style from \"./style.module.css\";\r\n\r\nconst Screenshot = React.forwardRef((props, ref) => {\r\n  const [images, setImages] = useState([0, 1, 2, 3]);\r\n\r\n  return (\r\n    <div ref={ref} className={style[\"Screenshot\"]}>\r\n      <span className={style.title}>screenshots</span>\r\n      <div className={style[\"screenshot-slide\"]}>\r\n        {images.map(img => (\r\n          <span>{img}</span>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Screenshot;\r\n","import React from \"react\";\r\nimport style from \"./style.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Download = React.forwardRef((props, ref) => {\r\n  return (\r\n    <div ref={ref} className={style.Download}>\r\n      <span className={style.title}>download now!</span>\r\n      <div className={style[\"link-container\"]}>\r\n        <Link\r\n          className={style.link}\r\n          to=\"google.com\"\r\n          style={{ textDecoration: \"none\" }}\r\n        >\r\n          <img\r\n            src={require(\"../assets/play_store.svg\")}\r\n            alt=\"google play icon\"\r\n          />\r\n          <span>android</span>\r\n        </Link>\r\n        <Link\r\n          className={style.link}\r\n          to=\"google.com\"\r\n          style={{ textDecoration: \"none\" }}\r\n        >\r\n          <img src={require(\"../assets/app_store.svg\")} alt=\"app store icon\" />\r\n          <span>ios</span>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Download;\r\n","import React, { useState, useRef, useEffect } from \"react\";\nimport \"./App.css\";\nimport { Route } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport Nav from \"./components/Nav\";\nimport Features from \"./components/Features\";\nimport Platform from \"./components/Platform\";\nimport Screenshot from \"./components/Screenshot\";\nimport Download from \"./components/Download\";\n\nfunction App() {\n  const home = useRef();\n  const features = useRef();\n  const platform = useRef();\n  const screentshot = useRef();\n  const download = useRef();\n\n  const [position, setPosition] = useState({});\n\n  useEffect(() => {\n    setPosition({\n      home: 0,\n      features: features.current.offsetTop,\n      platform: platform.current.offsetTop,\n      screenshot: screentshot.current.offsetTop + 300,\n      download: download.current.offsetTop\n    });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Route\n        path=\"/\"\n        render={() => (\n          <>\n            <Nav position={position} />\n            <Home ref={home} />\n            <Features ref={features} />\n\n            <Platform ref={platform} />\n            <Screenshot ref={screentshot} />\n            <Download ref={download} />\n          </>\n        )}\n      ></Route>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}